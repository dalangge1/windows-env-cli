#!/usr/bin/env node
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const help_1=require("./help"),shell=require("child_process"),ENV_REG_PATH="HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment";(async function(){if(hasOption("--help"))return help_1.default();const a=process.argv.slice(3),b=hasOption(["-s","--set"]),c=hasOption(["-e","--edit"]),d=hasOption(["-l","--list"]),e=hasOption(["-p","--push"]),f=hasOption(["-r","--remove"]),g=hasOption(["-us","--unshift"]),h=hasOption(["-a","--add-path"]),i=hasOption(["-lp","--list-path"]);if(await exec("chcp 65001"),d||i){if(i)printItem((await getEnvItem("Path")));else if(0===a.length){const a=await getEnvList();printList(a)}else{const b=a.shift();b?printItem((await getEnvItem(b))):console.log("\u53C2\u6570\u9519\u8BEF")}return}if(c||h||g||f||e||b){let c=[...a];b&&c.splice(1,0,"set"),e&&c.splice(1,0,"push"),f&&c.splice(1,0,"remove"),g&&c.splice(1,0,"unshift"),h&&(c=["Path","push",...a]);const[d,i,j,k]=formatOptions(c);try{if("set"===i){const a=k?"REG_EXPAND_SZ":"REG_SZ";await exec(`reg add "${ENV_REG_PATH}" /v ${d} /t ${a} /d ${j}`)}if("push"===i||"unshift"===i){const a=await getEnvItem(d);a.values.includes(j)&&a.values.splice(a.values.indexOf(j),1),a.values[i](j),await exec(`reg add "${ENV_REG_PATH}" /f /v ${d} /t ${a.type} /d "${a.values.join(";")}"`)}"remove"===i&&d&&(await exec(`reg delete "${ENV_REG_PATH}" /f /v ${d}`)),console.log("\u64CD\u4F5C\u6210\u529F")}catch(a){console.log("\u51FA\u9519\u4E86:",a)}}})();function hasOption(a){return"string"==typeof a?process.argv.includes(a):a.some(a=>process.argv.includes(a))}function exec(a){return new Promise((b,c)=>{shell.exec(a,(a,d)=>{a?c(a):b(d)})})}function parseLine(a){let[,b,c,d]=a.split("    "),e=[];return("Path"===b||d.includes(";"))&&(e=d.split(";").filter(a=>""!==a)),{key:b,type:c,value:d,values:e}}function formatValue(a){const b=/\%[^\%]*\%/i;return[a.replace(/^[\'\"]/,"").replace(/[\'\"]$/,""),b.test(a)]}function formatOptions(a){let b,c,d,e,f;switch(a.length){case 2:return[b,d]=a,[c,f]=formatValue(d),[b,"set",c,f];case 3:if([b,e,d]=a,[c,f]=formatValue(d),"push"===e||"set"===e)return[b,e,c,f];throw new Error("operator\u53EA\u80FD\u586B\u5199 =, +");default:throw new Error("\u53C2\u6570\u586B\u5199\u9519\u8BEF");}}function printList(a){a.forEach((a,b)=>{console.log(`[${b}] ${a.key}: ${a.value}`)})}function printItem(a){a.values.length?console.log(`key: ${a.key}
type: ${a.type}
values:
${a.values.map((a,b)=>`[${b}] ${a}\n`).join("")}`):console.log(`key: ${a.key}
type: ${a.type}
value: ${a.value}`)}async function getEnvList(){const a=await exec(`reg query "${ENV_REG_PATH}"`),b=a.split("\r\n").slice(2,-2),c=b.map(parseLine);return c}async function getEnvItem(a){const b=await exec(`reg query "${ENV_REG_PATH}" /v ${a}`);return parseLine(b.replace(/\r\n/g,""))}